function Initialize() { var e = $("#MenuBar"), t = e.find("ol.breadcrumb"); li = $("<li>", { class: "breadcrumb-item active", text: "Visiomap" }), t.append(li); var a = e.find("div.btn-group"), n = $("<div>", { class: "btn-group mr-3" }); a.before(n); var i = $("<button>", { id: "BtnCreate", type: "button", "data-toggle": "modal", "data-target": "#DivCreate", text: "CREATE", class: "btn success-color text-white" }); n.append(i), i = $("<button>", { id: "BtnCopy", type: "button", "data-toggle": "modal", "data-target": "#DivCopy", text: "COPY", class: "btn warning-color text-white" }), n.append(i), i = $("<button>", { id: "BtnDelete", type: "button", "data-toggle": "modal", "data-target": "#DivDelete", text: "DELETE", class: "btn danger-color text-white" }), n.append(i); var p = $("#FilterEquip"), o = $("#FilterPro"), s = $("#FilterFile"); $.getJSON("/VisioMaps/LoadItem", { equipId: null, proId: null }).done(function (e) { var t = e.Equipments; isEmpty(t) && toastr("Equipments item이 없습니다."), p.empty(), p.append($("<option>", { text: "-- Please select --", value: "" })), $.each(t, function () { var e = $("<option>", { value: this.EquipmentId, text: this.EquipmentName }); p.append(e) }), SelectLJH(p), SelectLJH(o), SelectLJH(s), LoadVisioMapList() }) } function LoadItem(e, t) { var a = $("#" + t + "Equip"), n = $("#" + t + "Pro"), i = $("#" + t + "File"); "Equipment" === e ? (n.empty(), i.empty()) : "Product" === e && i.empty(), $.getJSON("/VisioMaps/LoadItem", { equipId: a.val(), proId: n.val() }).done(function (p) { for (var o = p.Equipments, s = p.Products, l = p.Files, r = 0; r < 3; r++) { var d, c; if (0 === r ? (d = o, c = a) : 1 === r ? (d = s, c = n) : (d = l, c = i), !isEmpty(d)) { c.empty(); var u = $("<option>", { text: "-- Please select --", value: "" }); c.append(u), $.each(d, function () { u = $("<option>"), 0 === r ? (u.val(this.EquipmentId), u.text(this.EquipmentName)) : 1 === r ? (u.val(this.ProductId), u.text(this.ProductModel)) : (u.val(this.WordMapId), u.text(this.FileName)), c.append(u) }), SelectLJH(c) } } "Filter" === t ? LoadVisioMapList() : "Product" === e && LoadVariantList(t) }) } function LoadVisioMapList() { var e = $("#FilterEquip").val(), t = $("#FilterPro").val(), a = $("#FilterFile").val(); loading.show(), $.getJSON("/VisioMaps/LoadVisioMapList/", { equipId: e, goodsId: t, fileId: a }).done(function (e) { var t = $("#List tbody"); t.empty(), $.each(e, function () { var e = $("<tr>", { id: this.VsoId }); t.prepend(e); for (var a = 0; a < 7; a++) { var n = $("<td>"); switch (e.append(n), a) { case 0: var i = $("<input>", { type: "hidden", value: this.VsoId }); n.append(i); var p = $("<input>", { type: "checkbox", class: "mr-3" }); n.append(p); var o = $("<span>", { text: this.Group.slice(0, 1), class: this.Group.slice(0, 1) }); n.append(o); break; case 1: var s = $("<span>", { text: this.EquipmentGroup }); n.append(s); break; case 2: var l = $("<span>", { text: this.ProductNumber }); n.append(l); break; case 3: var r = $("<span>", { text: this.FileName }); n.append(r); break; case 4: if (null !== this.VariantNumber) { var d = $("<span>", { text: this.VariantNumber }); n.append(d) } break; case 5: var c = $("<span>", { text: this.Title }); n.append(c); break; case 6: n.css("text-align", "right"); var u = $("<button>", { type: "button", class: "btn btn-light", value: this.VsoId }); u.on("click", function () { var e = new Array, t = $(this).val(); e.push(t), SubmitClone(e) }), n.append(u); var v = $("<i>", { class: "far fa-copy" }); u.append(v) } } e.on("dblclick", function (e) { if ("checkbox" === e.target.type) return !0; Load_EditItem($(this).attr("Id")) }) }), loading.hide() }).fail(function (e, t, a) { alert("Request Failed: " + (t + ", " + a)) }) } function Load_EditItem(e) { var t = $("#DivEdit input, #DivEdit select"); $.each(t, function () { var e = $(this), t = $(this).prop("name"); if ("Group" === t || "Default" === t || "ReLayerVal" === t) return !0; e.is("input") ? e.val("") : e.is("select") && e.empty() }), $("#EditId").val(e), $.getJSON("/VisioMaps/LoadVisioMapItem", { visioId: e }).done(function (e) { var t = e.ItemInfo, a = t.EquipmentId, n = t.ProductId, i = t.WordMapId; $.getJSON("/VisioMaps/EquipmentList", function (e) { var t = $("#EditEquip"); t.empty(), $.each(e, function () { var e = $("<option>", { value: this.Id, text: this.Name }); t.append(e) }), t.val(a), SelectLJH(t) }), $.getJSON("/VisioMaps/ProductList", { equipmentId: a }).done(function (e) { var t = $("#EditPro"); t.empty(), $.each(e, function () { var e = $("<option>", { value: this.Id, text: this.Model }); t.append(e) }), isEmpty(n) || t.val(n), SelectLJH(t) }).fail(function (e) { console.log(e) }), $.getJSON("/VisioMaps/FileList", { productId: n }).done(function (e) { var t = $("#EditFile"); t.empty(), $.each(e, function () { var e = $("<option>", { value: this.Id, text: this.FileName }); t.append(e) }), isEmpty(i) || t.val(i), SelectLJH(t) }).fail(function (e) { console.log(e) }); var p = $("#EditGroup"), o = t.Group; p.val(o).trigger("change"); var s = $("#EditDef"), l = t.Default; s.val(isEmpty(l) ? "" : l), SelectLJH(s); var r = $("#EditTitle"), d = t.Title; r.val(isEmpty(d) ? "" : d); var c = $("#EditEnable"), u = t.EnableLayer; c.val(isEmpty(u) ? "" : u); var v = $("#Edit_DivShape .list-group"); v.empty(); var h = e.Shapes; $.each(h, function () { var e = this.VisioMapId, t = this.Type, a = this.Name, n = this.Text, i = this.ReShape; AddShape(v, e, t, a, n, i) }); var m = $("#EditRelation tbody"); m.empty(); var f = $("<tr>"); m.append(f); var y = $("<td>", { colspan: 9 }); f.append(y); var g = $("<button>", { type: "button", id: "BtnAddRelation", class: "btn btn-white m-0", style: "width:100%;" }); g.on("click", function () { $("#EditPro").val(); AddRelation($(this), null) }), y.append(g); var I = $("<i>", { class: "fa fa-plus" }); g.append(I); for (var b = e.Relations, L = 0; L < b.length; L++)AddRelation(g, b[L]); $("#DivEdit").modal("show"), loading.hide() }).fail(function (e) { console.log(e) }) } function AddRelation(e, t) { $.getJSON("/VisioMaps/LoadRelation", { id: t }).done(function (a) { var n, i, p, o, s, l, r, d; isEmpty(t) || (a.VisiomapId, n = a.Method, i = a.Value, p = a.VariantIds, o = a.IntEquipmentId, s = a.IntProductId, l = a.ReLayerId, r = a.ReLayerValue, d = a.ProductId); var c = e.parent().parent(), u = $("<tr>", { class: "RelationRow" }); c.before(u), u.keydown(function (e) { 13 === e.keyCode && $("#BtnSubmitEdit").trigger("click") }); for (var v = 0; v < 8; v++)switch (v) { case 0: var h = $("<input>", { type: "hidden", name: "RelationId", value: isEmpty(t) ? "" : t }); u.append(h); var m = $("<input>", { type: "hidden", name: "ChangeVal", value: isEmpty(t) ? "A" : "" }); u.append(m); var f = $("<td>", { class: "IntEquip" }); u.append(f), $.getJSON("/VisioMaps/EquipmentList", function (e) { var t = $("<select>", { class: "form-control", name: "intEquip" }); f.append(t); var a = $("<option>", { text: "-- Please select --", value: "" }); t.append(a), $.each(e, function () { a = $("<option>", { value: this.Id, text: this.Name }), t.append(a) }), isEmpty(o) || t.val(o), SelectLJH(t), t.on("change", function () { ChangeRelation(this) }) }); break; case 1: var y = $("<td>", { class: "IntPro" }); u.append(y), isEmpty(o) || $.getJSON("/VisioMaps/ProductList", { equipmentId: o }).done(function (e) { var t = $("<select>", { class: "form-control", name: "intProduct" }); y.append(t); var a = $("<option>", { text: "-- Please select --", value: "" }); t.append(a), $.each(e, function () { a = $("<option>", { value: this.Id, text: this.Model }), t.append(a) }), isEmpty(s) || intProduct.val(s), SelectLJH(t), t.on("change", function () { ChangeRelation(this) }) }).fail(function (e) { console.log(e) }); break; case 2: var g = $("<td>", { class: "Component" }); u.append(g), isEmpty(d) && (d = g.parent().parent().parent().parent().parent().parent().parent().parent().parent().parent().find('select[name="ProductId"]').val()), $.getJSON("/VisioMaps/ComponentList", { productId: isEmpty(o) && isEmpty(s) ? d : s }).done(function (e) { if (!isEmpty(e)) { var t = $("<select>", { class: "form-control", name: "component" }); g.append(t); var a = $("<option>", { text: "-- Please select --", value: "" }); if (t.append(a), $.each(e, function () { var e = this.Model + " [" + this.Name + "]"; a = $("<option>", { value: this.Id, text: e, title: "Component: " + e + "\nGroup: " + this.Group + (isEmpty(this.Remark) ? "" : "\nRemark: " + this.Remark) }), t.append(a) }), SelectLJH(t), t.on("change", function () { ChangeRelation(this) }), !isEmpty(p)) for (var n = 0; n < p.length; n++)t.val(p[n]).trigger("change") } }).fail(function (e) { console.log(e) }); break; case 3: var I = $("<td>", { class: "Method" }); u.append(I); var b = $("<input>", { type: "text", class: "form-control", name: "Method", value: n }); I.append(b); break; case 4: var L = $("<td>", { class: "Value" }); u.append(L); var S = void 0 === i ? "" : i.split(",")[0], R = void 0 === i ? "" : i.split(",")[1], E = $("<input>", { type: "text", class: "form-control", name: "Value", value: S }); L.append(E), "GA" === n && $.getJSON("/VisioMaps/ComponentList", { productId: isEmpty(o) && isEmpty(s) ? d : s }).done(function (e) { if (!isEmpty(e)) { var t = $("<select>", { class: "form-control", name: "GAVariant" }); L.append(t); var a = $("<option>", { text: "-- Please select --", value: "" }); t.append(a), $.each(e, function () { var e = this.Model + " [" + this.Name + "]"; a = $("<option>", { value: this.Id, text: e, title: "Component: " + e + "\nGroup: " + this.Group + (isEmpty(this.Remark) ? "" : "\nRemark: " + this.Remark) }), t.append(a) }), SelectLJH(t), t.on("change", function () { ChangeLJH($(this)) }), isEmpty(R) || t.val(R).trigger("change") } }).fail(function (e) { console.log(e) }); break; case 5: var V = $("<td>", { class: "Layer" }); u.append(V), $.getJSON("/VisioMaps/LayerList", { productId: isEmpty(s) ? d : s }).done(function (e) { var t = $("<select>", { class: "form-control", name: "ReLayerId" }); V.append(t); var a = $("<option>", { text: "-- Please select --", value: "" }); t.append(a), $.each(e, function () { a = $("<option>", { value: this.Id, text: this.Title, title: this.Wordmap }), t.append(a) }), t.val(l), SelectLJH(t) }).fail(function (e) { console.log(e) }); break; case 6: var x = $("<td>", { class: "LayerVal" }); u.append(x); var C = $("<input>", { type: "text", class: "form-control", name: "ReLayerValue", value: r }); x.append(C); break; case 7: var k = $("<td>", { class: "RemoveButton" }); u.append(k); var P = $("<button>", { type: "button", class: "btn btn-yellow btn-Remove-Relation" }); k.append(P); var M = $("<i>", { class: "fa fa-minus" }); P.append(M), P.on("click", function () { var e = $(this).parent().parent(), t = e.find('input[name="ChangeVal"]'); e.css("display", "none"), "A" === t.val() ? e.remove() : t.val("D") }) } }).fail(function (e) { console.log(e) }) } function ChangeRelation(e) { switch ($(e).prop("name")) { case "intEquip": var t = $(e).parent().parent(), a = t.find("td.IntPro").empty(), n = t.find("td.Component").empty(), i = $(e).val(); isEmpty(i) || $.getJSON("/VisioMaps/ProductList", { equipmentId: i }).done(function (e) { var t = $("<select>", { class: "form-control", name: "intProduct" }); a.append(t); var n = $("<option>", { text: "-- Please select --", value: "" }); t.append(n), $.each(e, function () { n = $("<option>", { value: this.Id, text: this.Model }), t.append(n) }), SelectLJH(t), t.on("change", function () { ChangeRelation(this) }) }).fail(function (e) { console.log(e) }); break; case "intProduct": t = $(e).parent().parent(), n = t.find("td.Component").empty(); t.find("td.Layer").empty(); var p = $(e).val(); isEmpty(p) || ($.getJSON("/VisioMaps/ComponentList", { productId: p }).done(function (e) { var t = $("<select>", { class: "form-control", name: "component" }); n.append(t); var a = $("<option>", { text: "-- Please select --", value: "" }); t.append(a), $.each(e, function () { a = $("<option>", { value: this.Id, text: this.Model, title: " [" + this.Name + "]" }), t.append(a) }), SelectLJH(t), t.on("change", function () { ChangeRelation(this) }) }).fail(function (e) { console.log(e) }), $.getJSON("/VisioMaps/LayerList", { productId: p }).done(function (e) { }).fail(function (e) { console.log(e) })); break; case "component": var o = $("<button>", { type: "button", name: "Variant", class: "btn btn-white", value: $(e).val(), text: $(e.selectedOptions).text(), title: $(e.selectedOptions).prop("title") }); $(e).before(o), $(e).val(""), SelectLJH($(e)), o.on("click", function () { $(this).remove() }) } } function SubmitClone(e) { loading.show(), $.ajax({ type: "POST", url: "/VisioMaps/CopyVisiomaps/", data: { json: JSON.stringify(e) }, success: function (e) { LoadVisioMapList(), toastr.success("Success copy", "", { positionClass: "toast-bottom-left" }) }, failure: function (e) { toastr.fail(e) }, error: function (e) { toastr.error(e) } }) } function LoadVariantList(e) { var t = $("#" + e + "Pro").val(); $.getJSON("/VisioMaps/LoadVariantList/", { strAction: e, id: t }).done(function (t) { var a = $("#" + e + "Vat"); a.empty(), a.append($("<option>", { text: "-- Please select --", value: "" })), $.each(t, function () { var e = $("<optGroup>", { label: this.Group }); a.append(e), $.each(this.Variants, function () { var t = $("<option>", { value: this.VariantId, text: this.ProductModel + " [" + this.VariantName + "]", "data-model": this.ProductModel }); e.append(t) }) }), SelectLJH(a) }).fail(function (e, t, a) { alert("Request Failed: " + (t + ", " + a)) }) } function ChangeGroup(e) { var t = $("#" + e + "Group").val(), a = $("#" + e + "Def"); if (a.empty(), "INTERFACE" === t) { a.parent().show(); for (var n = 0; n < 3; n++) { if (0 === n) var i = $("<option>", { text: "DISABLE" }); else i = 1 === n ? $("<option>", { text: "ENABLE" }) : $("<option>", { text: "MANDATORY" }); a.append(i) } SelectLJH(a) } else a.parent().hide() } function AddShape(e, t, a, n, p, o) { var s = $("<li>", { class: "list-group-item" }); e.append(s); var l = $("<div>", { class: "row rowShapes mb-3" }); s.append(l); var r = $("<input>", { type: "hidden", value: t, name: "Id" }); l.append(r); var d = $("<input>", { type: "hidden", name: "ChangeVal" }); for (isEmpty(t) && d.val("A"), l.append(d), i = 0; i < 4; i++) { var c = $("<div>"); if (l.append(c), i < 3) { c.prop("class", "col pr-0"); var u = $("<div>", { class: "input-group" }); c.append(u); var v = $("<div>", { class: "input-group-prepend" }); u.append(v); var h = $("<span>", { class: "input-group-text" }); v.append(h) } else c.prop("class", "text-right pl-3"), c.css("display", "inline-flex"); switch (i) { case 0: h.append("Type"); var m = $("<select>", { name: "Type" }); u.append(m); var f = $("<option>", { text: "CABLE" }); m.append(f), f = $("<option>", { text: "YARD" }), m.append(f), f = $("<option>", { text: "LOCATION" }), m.append(f), isEmpty(a) || m.val(a), SelectLJH(m); break; case 1: h.append("Name"); var y = $("<input>", { type: "text", class: "form-control", name: "Name" }); u.append(y), isEmpty(n) || y.val(n), y.keydown(function (e) { 13 === e.keyCode && $("#BtnSubmitEdit").trigger("click") }); break; case 2: h.append("Text"); var g = $("<input>", { type: "text", class: "form-control", name: "Text" }); u.append(g), isEmpty(p) || g.val(p), g.keydown(function (e) { 13 === e.keyCode && $("#BtnSubmitEdit").trigger("click") }); break; case 3: var I = $("<button>", { type: "button", class: "btn btn-white btnRemoveShape", title: "Remove Shape" }); c.append(I); var b = $("<i>", { class: "fa fa-minus" }); I.append(b), I.on("click", function (e) { var t = $(e.currentTarget).parent().parent(), a = t.find('input[name="ChangeVal"]'); "A" === a.val() ? t.remove() : (a.val("D"), t.parent().css("display", "none")) }) } } var L = $("<div>", { class: "row rowReShapes" }); s.append(L); var S = $("<div>", { class: "col text-center" }); L.append(S); var R = $("<button>", { type: "button", class: "btn btn-white", style: "width:90%;" }); S.append(R); var E = $("<i>", { class: "fa fa-plus" }); R.append(E), R.on("click", function (e) { AddRelationShape($(e.currentTarget), null) }), isEmpty(o) || AddRelationShape(R, o) } function AddRelationShape(e, t) { var a = $("<div>", { class: "card card-body" }); e.before(a), isEmpty(t) ? $.getJSON("/Visiomaps/LoadRelationData", { productId: null, layerId: null }).done(function (e) { var t = $("<div>", { class: "row" }); a.append(t); var n = $("<input>", { type: "hidden", name: "ChangeVal", value: "A" }); t.prepend(n); var i = $("<input>", { type: "hidden", name: "ReShapeId" }); t.prepend(i); var p = $("<div>", { class: "text-right pl-3", style: "display:inline-flex" }); t.prepend(p); var o = $("<button>", { type: "button", class: "btn btn-white btnRemReShape" }); p.append(o); var s = $("<i>", { class: "fa fa-minus" }); o.append(s), o.on("click", function (e) { var t = $(e.currentTarget).parent().parent(), a = t.find('input[name="ChangeVal"]'); "A" === a.val() ? t.parent().remove() : (t.parent().css("display", "none"), a.val("D")) }); var l = $("<div>", { class: "col" }); t.prepend(l); for (var r = 0; r < 2; r++) { var d = $("<div>", { class: "row" }); l.append(d); for (var c = 0; c < 3; c++) { var u = $("<div>", { class: "col" }); if (d.append(u), 0 === r || c < 2) { var v = $("<div>", { class: "input-group" }); u.append(v); var h = $("<div>", { class: "input-group-prepend" }); v.append(h); var m = $("<span>", { class: "input-group-text" }); h.append(m) } if (0 === r) switch (c) { case 0: m.append("Re.Product"); var f = $("<select>", { class: "ReProduct", name: "ReProduct" }); v.append(f); var y = $("<option>", { value: "", text: "-- Please Select --" }); f.append(y); var g = e.Products; $.each(g, function () { y = $("<option>", { value: this.Id, text: this.Model }), f.append(y) }), SelectLJH(f), f.on("change", function () { var e = $(this), t = $(this).val(); $.getJSON("/Visiomaps/LoadRelationData", { productId: t, layerId: null }).done(function (t) { var a = t.Layers, n = e.parent().parent().parent().find('select[name="ReLayer"]'); n.empty(), $.each(a, function () { var e = $("<option>", { value: this.Id, text: this.Name, title: this.File }); n.append(e) }), SelectLJH(n) }).fail(function (e) { console.log(e) }) }); break; case 1: m.append("Re.Layer"); var I = $("<select>", { class: "ReLayer", name: "ReLayer" }); v.append(I), SelectLJH(I), I.on("change", function () { var e = $(this), t = e.parent().parent().parent(), a = t.find('select[name="ReProduct"]').val(), n = e.val(); $.getJSON("/Visiomaps/LoadRelationData", { productId: a, layerId: n }).done(function (e) { var a = e.Shapes, n = t.find('select[name="ReShape"]'); n.empty(), $.each(a, function () { var e = $("<option>", { value: this.Id, text: this.Name }); n.append(e) }), SelectLJH(n) }).fail(function (e) { console.log(e) }) }); break; case 2: m.append("Re.Shape"); var b = $("<select>", { class: "ReShape", name: "ReShape" }); v.append(b), SelectLJH(b) } else switch (c) { case 0: m.append("Method"); var L = $("<input>", { type: "text", class: "form-control", name: "Method" }); v.append(L); break; case 1: m.append("Value"); var S = $("<input>", { type: "text", class: "form-control", name: "Value" }); v.append(S) } } } }).fail(function (e) { console.log(e) }) : $.each(t, function () { var e = this, t = $("<div>", { class: "row" }); a.append(t); var n = $("<input>", { type: "hidden", name: "ChangeVal" }); t.append(n); var i = $("<input>", { type: "hidden", name: "ReShapeId", value: e.ReShapeId }); t.prepend(i); var p = $("<div>", { class: "text-right pl-3", style: "display:inline-flex" }); t.prepend(p); var o = $("<button>", { type: "button", class: "btn btn-white btnRemReShape" }); p.append(o); var s = $("<i>", { class: "fa fa-minus" }); o.append(s), o.on("click", function (e) { var t = $(e.currentTarget).parent().parent(), a = t.find('input[name="ChangeVal"]'); "A" === a.val() ? t.parent().remove() : (t.parent().css("display", "none"), a.val("D")) }); var l = $("<div>", { class: "col" }); t.prepend(l); for (var r = 0; r < 2; r++) { var d = $("<div>", { class: "row" }); l.append(d); for (var c = 0; c < 3; c++) { var u = $("<div>", { class: "col" }); if (d.append(u), 0 === r || c < 2) { var v = $("<div>", { class: "input-group" }); u.append(v); var h = $("<div>", { class: "input-group-prepend" }); v.append(h); var m = $("<span>", { class: "input-group-text" }); h.append(m) } if (0 === r) switch (c) { case 0: m.append("Re.Product"); var f = $("<select>", { class: "ReProduct", name: "ReProduct" }); v.append(f); var y = $("<option>", { value: "", text: "-- Please Select --" }); f.append(y); var g = e.ReProducts; $.each(g, function () { y = $("<option>", { value: this.Id, text: this.Model }), f.append(y) }), f.val(e.ReProduct), SelectLJH(f), f.on("change", function () { var e = $(this).val(); $.getJSON("/Visiomaps/LoadRelationData", { productId: e, layerId: null }).done(function (e) { var t = e.Layers, a = thisSelect.parent().parent().parent().find('select[name="ReLayer"]'); a.empty(), $.each(t, function () { var e = $("<option>", { value: this.Id, text: this.Name, title: this.File }); a.append(e) }), SelectLJH(a) }).fail(function (e, t, a) { alert("Request Failed: " + t) }) }); break; case 1: m.append("Re.Layer"); var I = $("<select>", { class: "ReLayer", name: "ReLayer" }); v.append(I); var b = e.ReLayers; $.each(b, function () { option = $("<option>", { value: this.Id, text: this.Name, title: this.title }), I.append(option) }), I.val(e.ReLayer), SelectLJH(I), I.on("change", function () { var e = $(this), t = e.val(), a = e.parent().parent().parent().find('select[name="ReProduct"]').val(); $.getJSON("/Visiomaps/LoadRelationData", { productId: a, layerId: t }).done(function (e) { var t = e.Shapes, a = thisSelect.parent().parent().parent().find('select[name="ReShape"]'); a.empty(), $.each(t, function () { var e = $("<option>", { value: this.Id, text: this.Name }); a.append(e) }), SelectLJH(a) }).fail(function (e, t, a) { alert("Request Failed: " + t) }) }); break; case 2: m.append("Re.Shape"); var L = $("<select>", { class: "ReShape", name: "ReShape" }); v.append(L); var S = e.ReShapes; $.each(S, function () { option = $("<option>", { value: this.Id, text: this.Name }), L.append(option) }), L.val(e.ReShape), SelectLJH(L) } else switch (c) { case 0: m.append("Method"); var R = $("<input>", { type: "text", class: "form-control", name: "Method", value: e.Method }); v.append(R); break; case 1: m.append("Value"); var E = $("<input>", { type: "text", class: "form-control", name: "Value", value: e.Value }); v.append(E) } } } }) } function objForm_Relation(e) { var t = new Array, a = $(e).find(".rowShapes"); $.each(a, function () { var e = $(this).find('input[name="Id"]'), a = $(this).find('input[name="ChangeVal"]'), n = $(this).find('select[name="Type"]'), i = $(this).find('input[name="Name"]'), p = $(this).find('input[name="Text"]'), o = $(this).siblings("div.rowReShapes").find(".card"), s = Array(); $.each(o, function () { var e = $(this).find('input[name="ReShapeId"]'), t = $(this).find('input[name="ChangeVal"]'), a = $(this).find('select[name="ReProduct"]'), n = $(this).find('select[name="ReLayer"]'), i = $(this).find('select[name="ReShape"]'), p = $(this).find('input[name="Method"]'), o = $(this).find('input[name="Value"]'), l = { Id: e.val(), ChangeVal: t.val(), ProductId: a.val(), LayerId: n.val(), ShapeId: i.val(), Method: p.val(), Value: o.val() }; s.push(l) }); var l = { Id: e.val(), ChangeVal: a.val(), Type: n.val(), Name: i.val(), Text: p.val(), ReShapes: s }; t.push(l) }); var n = $(e).find("table.relations tr.RelationRow"), i = new Array; return $.each(n, function () { var e = $(this).find('input[name="RelationId"]'), t = $(this).find('input[name="ChangeVal"]'), a = $(this).find('select[name="IntEquipmentId"]'), n = $(this).find('select[name="IntProductId"]'), p = $(this).find('input[name="Method"]'), o = $(this).find('input[name="Value"]'), s = $(this).find('select[name="GAVariant"]'), l = $(this).find('select[name="ReLayerId"]'), r = $(this).find('input[name="ReLayerValue"]'), d = new Object; i.push(d), d.RelationId = e.val(), d.ChangeVal = t.val(), d.IntEquipmentId = a.val(), d.IntProductId = n.val(), d.Method = p.val(), d.Value = o.val(), d.GAVariant = s.val(), d.ReLayerId = l.val(), d.ReLayerValue = r.val(); var c = $(this).find('button[name="Variant"]'); if (c.length > 0) { var u = null; $.each(c, function () { null === u ? u = $(this).val() : u += "," + $(this).val() }), d.VariantIds = u } }), { Shapes: t, Relations: i } } $(window).on("load", function () { Initialize(), $("#FilterEquip").change(function () { LoadItem("Equipment", "Filter") }), $("#FilterPro").change(function () { LoadItem("Product", "Filter") }), $("#FilterFile").change(function () { LoadVisioMapList() }), $("#DivCreate").on("shown.bs.modal", function (e) { var t = $(this).find("select"); SelectLJH(t), LoadItem("", "Create"); var a = $("#CreateRelation tbody"); a.empty(); var n = $("<tr>"); a.append(n); var p = $("<td>", { colspan: 9 }); n.append(p); var o = $("<button>", { type: "button", id: "BtnAddRelation", class: "btn btn-light", style: "width:100%;" }); o.on("click", function () { AddRelation($(this), null) }), p.append(o), i = $("<i>", { class: "fa fa-plus" }), o.append(i), $("#DivShape > .card-body").find("div.card").remove() }), $("#FormCreate input").keydown(function (e) { 13 === e.keyCode && $("#BtnSubmitCreate").trigger("click") }), $("#CreateEquip").change(function () { LoadItem("Equipment", "Create") }), $("#CreatePro").change(function () { LoadItem("Product", "Create") }), $("#CreateGroup").change(function () { ChangeGroup("Create") }), $("#BtnSubmitCreate").click(function () { var e = $("#DivCreate .rowShapes"), t = new Array; $.each(e, function () { var e = $(this).find('select[name="Type"]'), a = $(this).find('input[name="Name"]'), n = $(this).find('input[name="Text"]'), i = $(this).find('select[name="ReShape"]'); i = isEmpty(i.val()) ? "" : i.val(); var p = e.val() + "," + a.val() + "," + n.val() + "," + i; t.push(p) }), e = $("#CreateRelation tr.RelationRow"); var a = new Array; $.each(e, function () { var e = $(this).find('input[name="Id"]'), t = $(this).find('input[name="ChangeVal"]'), n = $(this).find('select[name="RelationType"]'), i = $(this).find('input[name="Method"]'), p = $(this).find('input[name="Value"]'), o = $(this).find('input[name="IntEquipmentId"]'), s = $(this).find('input[name="IntProductId"]'), l = $(this).find('input[name="ReLayerId"]'), r = $(this).find('input[name="ReLayerValue"]'), d = new Object; a.push(d), d.RelationId = e.val(), d.ChangeVal = t.val(), d.RelationType = n.val(), d.Method = i.val(), d.Value = p.val(), d.IntEquipmentId = o.val(), d.IntProductId = s.val(), d.ReLayerId = l.val(), d.ReLayerValue = r.val(); var c = $(this).find('button[name="Variant"]'); if (c.length > 0) { var u = null; $.each(c, function () { null === u ? u = $(this).val() : u += "," + $(this).val() }), d.VariantIds = u } }), $('#DivCreate input[name="strShapes"]').val(JSON.stringify(t)), $('#DivCreate input[name="strRelations"]').val(JSON.stringify(a)), $.ajax({ type: "POST", url: "/VisioMaps/Create/", data: $("#FormCreate").serialize(), success: function () { $("#DivCreate").modal("toggle"), LoadVisioMapList() } }) }), $("#FormEdit input").keydown(function (e) { 13 === e.keyCode && $("#BtnSubmitEdit").trigger("click") }), $("#EditEquip").change(function () { LoadItem("Equipment", "Edit") }), $("#EditPro").change(function () { LoadItem("Product", "Edit") }), $("#EditGroup").change(function () { ChangeGroup("Edit") }), $("#BtnSubmitEdit").click(function () { var e = $("#FormEdit"), t = objForm_Relation(e); e.find('input[name="strRelations"]').val(JSON.stringify(t)), $.ajax({ type: "POST", url: "/VisioMaps/Edit/", data: $("#FormEdit").serialize(), success: function (e) { $("#DivEdit").modal("toggle"), LoadVisioMapList() } }) }), $("#BtnSubmitDelete").on("click", function () { var e = $("#List input:checked"), t = Array(); $.each(e, function () { var e = $(this).siblings("input").val(); t.push(e) }), $.ajax({ type: "POST", url: "/VisioMaps/Delete/", data: { json: JSON.stringify(t) }, success: function (e) { "Success" === e ? ($("#DivDelete").modal("hide"), LoadVisioMapList(), toastr.success("Success delete", "", { positionClass: "toast-bottom-right" })) : toastr.error(e) } }) }), $("#BtnSubmitCopy").on("click", function () { var e = new Array, t = $("#List input:checked"); $.each(t, function () { var t = $(this).siblings('input[type="hidden"]').val(); e.push(t) }), $("#DivCopy").modal("hide"), SubmitClone(e) }), $("#List").delegate("tr", "click", function (e) { if ("checkbox" !== $(e.target).prop("type")) { var t = $(e.currentTarget).find('input[type="checkbox"]'); t.prop("checked", !t.prop("checked")) } $(e.currentTarget).toggleClass("table-active") }), $(".btnAllRemoveShape").on("click", function () { var e = $(this).parent().parent().parent().siblings().find("div.rowShapes"); $.each(e, function () { var e = $(this).find('input[name="Id"]').val(), t = $(this).find('input[name="ChangeVal"]'); isEmpty(e) ? $(this).parent().remove() : ($(this).parent().css("display", "none"), t.val("D")) }) }), $(".btnAddShape").on("click", function () { AddShape($(this).parent().parent().parent().siblings("ul.list-group"), null, null, null, null, null) }) });