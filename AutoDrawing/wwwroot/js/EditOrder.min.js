var serviceIdx = $("#ServiceIdx").val(); function Initialize() { loading.show(); var e = $("#MenuBar"), a = e.find("ol.breadcrumb"), t = $("<li>", { class: "breadcrumb-item" }); a.append(t); var n = $("<a>", { href: "/DrawingOrders/List", text: "Drawings" }); t.append(n), t = $("<li>", { class: "breadcrumb-item active", text: depth }), a.append(t); var i = e.find("div.btn-group"), s = $("<div>", { class: "btn-group mr-3" }); i.before(s); var r = $("<button>", { id: "BtnEditOrder", type: "button", text: "EDIT", class: "btn primary-color text-white", value: "Edit" }); s.append(r), loading.hide() } function LoadService(e) { $.getJSON("/DrawingOrders/LoadService", { serviceIdx: e }).done(function (a) { for (var t = a.Order, n = a.Files, i = 0; i < 14; i++) { var s, r; switch (i) { case 0: s = $("#YardId"), r = t.arrYard; break; case 1: s = $("#ServiceType"), r = t.arrType; break; case 2: s = $("#Version"), r = t.arrVersion; break; case 3: s = $("#VesselType"), r = t.arrVesselType; break; case 4: s = $("#Class"), r = t.arrClass; break; case 5: s = $("#Notation"), r = t.arrNotation; break; case 6: s = $("#Flag"), r = t.arrFlag; break; case 7: s = $("#Contact"), r = t.arrContact; break; case 8: s = $("#Engineer"), r = t.arrEngineer; break; case 9: s = $("#Status"), r = t.arrStatus; break; case 10: s = $("#PowerSource"), r = t.arrPower; break; case 11: s = $("#RMS"), r = t.arrRMS; break; case 12: s = $("#BAM"), r = t.arrBAM; break; case 13: s = $("#GMDSS"), r = t.arrGMDSS }s.empty(), $.each(r, function () { var e = $("<option>"); s.append(e), 1 === i || 9 === i ? (e.val(this.Value), e.text(this.Name)) : 2 === i ? (e.val(this.ServiceIdx), e.text(this.Version + " (Request Date: " + this.RequestDate + ")")) : (e.val(this.Id), e.text(this.Name)) }) } var o = $("#EditOrderBody").find("input, select"); $.each(o, function () { var e = $(this).prop("name"), a = t[e]; isEmpty(a) || $(this).val(a), "ServiceType" !== e && "Version" !== e && $(this).prop("disabled", !0), $(this).is("select") && SelectLJH($(this)) }); var c = $("#OrderFiles"); c.empty(), $.each(n, function () { var e = this.Category, a = this.FileName, t = this.FileUrl, n = c.find('.dropdown-header[data-fileName="' + e + '"]'); if (0 === n.length) { var i = $("<span>", { class: "dropdown-header", text: e, "data-fileName": e }); c.append(i), n = i } var s = $("<a>", { class: "dropdown-item", href: t, text: a, target: "_blank" }); n.after(s) }), LoadEquipments(e, "Load") }).fail(function (e) { console.log(e) }) } function LoadLink() { var e = $("#ServiceIdx").val(); $.ajax({ url: "/DrawingOrders/LoadLink", data: { serviceIdx: e }, success: function (e) { if (e = JSON.parse(e), !isEmpty(e)) { var a = $("#BtnDownload"), t = a.parent().find("a"); t.remove(), t = $("<a>", { href: e.Link, text: e.FileName + " (" + e.CreateDate + ")", class: "btn text-capitalize", id: "zipLink" }), a.parent().append(t) } }, error: function (e, a, t) { console.log(e.responseText) } }) } function LoadFD(e) { loading.show(); var a = $("#FDList"); a.empty(), $.getJSON("/DrawingOrders/LoadFDList", { id: e }, function (e) { $.each(e, function () { var e = $("<div>", { class: "row mt-2 mb-2" }); a.append(e); var t = $("<div>", { class: "col" }); e.append(t); var n = $("<div>", { class: "form-group form-check" }); t.append(n); var i = $("<a>", { href: this.FileLink, target: "_blank", title: this.FileLink, style: "margin:auto;" }); n.append(i); var s = $("<span>", { text: this.FileName }); i.append(s), t = $("<div>", { class: "col-2", style: "text-align:right;" }), e.append(t); var r = $("<input>", { type: "hidden", value: this.Id }); t.append(r); var o = $("<button>", { type: "button", class: "btn btn-light" }); t.append(o); var c = $("<i>", { class: "fa fa-minus" }); o.append(c) }), $("#FDList button").click(function () { var e = $(this).siblings('input[type="hidden"]').val(); if (isEmpty(e)) return toastr.error("Empty id"), !0; $.ajax({ url: "/DrawingOrders/DeleteDrawing", data: { id: e }, success: function () { var e = $("#DwgEquipId").val(); LoadFDList(e) }, error: function (e, a, t) { toastr.error("Delete Inspection", "code:" + e.status + "\n message::" + e.responseText + "\n error:" + t) } }) }) }).done(function () { var a = $("#InsList"); a.empty(), $.getJSON("/DrawingOrders/FindInspection", { id: e }, function (e) { var t = e.ModelName; $("#DwgEquipModel").val(t); var n = e.FDFileName; $("#DwgEquipFile").val(n); var i = e.Inspection; $.each(i, function () { var e = $("<div>", { class: "row" }); a.append(e); var t = $("<div>", { class: "col" }); e.append(t); var n = $("<div>", { class: "form-group form-check" }); t.append(n); var i = $("<input>", { type: "checkbox", class: "form-check-input" }); i.prop("checked", !0), n.append(i); var s = $("<a>", { href: this.FileLink, target: "_blank", title: this.FileLink, text: this.FileName }); n.append(s), t = $("<div>", { class: "col-2", style: "text-align:right;" }), e.append(t); var r = $("<input>", { type: "hidden", value: this.Id }); t.append(r); var o = $("<button>", { type: "button", class: "btn btn-light" }); t.append(o); var c = $("<i>", { class: "fa fa-minus" }); o.append(c) }), $("#InsList button").click(function () { var e = $(this).siblings('input[type="hidden"]').val(); if (isEmpty(e)) return toastr.error("Empty id"), !0; $.ajax({ url: "/DrawingOrders/DeleteInspection", data: { id: e }, success: function () { var e = $("#DwgEquipId").val(); LoadInspection(e) }, error: function (e, a, t) { toastr.error("Delete Inspection", "code:" + e.status + "\n message::" + e.responseText + "\n error:" + t) } }) }) }).done(function () { var a = $("#ManList"); a.empty(), $.getJSON("/DrawingOrders/FindManual", { id: e }, function (e) { $.each(e, function () { var e = this.FileName, t = $("<div>", { class: "row mt-2 mb-2" }); e.indexOf("CHART") > 0 || e.indexOf("TOKYO KEIKI") > 0 ? a.append(t) : a.prepend(t); var n = $("<div>", { class: "col" }); t.append(n); var i = $("<div>", { class: "form-group form-check" }); n.append(i); var s = $("<input>", { type: "checkbox", class: "form-check-input" }); s.prop("checked", !(e.indexOf("CHART") > 0 || e.indexOf("TOKYO KEIKI") > 0)), i.append(s); var r = $("<input>", { type: "hidden", value: this.Id }); n.append(r); var o = $("<a>", { href: this.FileLink, target: "_blank", title: this.FileLink }); i.append(o); var c = $("<span>", { text: this.FileName }); o.append(c), n = $("<div>", { class: "col-2 p-0" }), t.append(n), n.append(this.Code), n = $("<div>", { class: "col-1 p-0" }), t.append(n), n.append(this.Version), n = $("<div>", { class: "col-2", style: "text-align:right;" }), t.append(n), n.append(this.Date) }) }).done(function () { loading.hide() }).fail(function (e, a, t) { toastr.error("Error", { positionClass: "toast-bottom-right" }) }) }).fail(function (e, a, t) { toastr.error("Error", { positionClass: "toast-bottom-right" }) }) }).fail(function (e, a, t) { toastr.error("Error", { positionClass: "toast-bottom-right" }) }) } function LoadEquipments(e, t) { loading.show(), $("#DivEquip .card-body .EquipmentGroup").empty(), "Load" === t ? $.getJSON("/DrawingOrders/LoadVesselEquipments", { serviceIdx: e }).done(function (n) { $.each(n, function () { var e = this.Group, a = this.ProductId, t = this.ProductModel, n = $("#DivEquip div." + e.replace("/", "").replace(/ /g, "")), i = $("<div>", { class: "row align-items-center pl-3 pr-3" }); n.append(i); var s = "/lib/image/icon (128x128)/"; switch (e) { case "MF/HF": s += "icon_Radio_MHF.png"; break; case "NAVTEX": s += "icon_Radio_Navtex.png"; break; case "SART": s += "icon_Radio_Sart.png"; break; case "EPIRB": s += "icon_Radio_EPIRB.png"; break; case "VHF": s += "icon_Radio_VHF.png"; break; case "TWO-WAY VHF": s += "icon_Radio_Two-way.png"; break; case "UHF": s += "icon_Radio_UHF.png"; break; case "WEATHER FAX": s += "icon_Radio_WeatherFax.png"; break; case "VDR": s += "icon_Voyage_VDR.png"; break; case "AIS": s += "icon_Voyage_AIS.png"; break; case "GPS": s += "icon_Voyage_DGPS.png"; break; case "BNWAS": s += "icon_Voyage_BNWAS.png"; break; case "SAT-LOG": s += "icon_Voyage_SatLog.png"; break; case "BRIDGE INTERFACE": s += "icon_MFD_BIF.png"; break; case "RADAR": s += "icon_MFD_Radar.png"; break; case "ECDIS": s += "icon_MFD_Ecdis.png"; break; case "CONNING DISPLAY": s += "icon_MFD_Conning.png"; break; case "RPS": s += "icon_MFD_RoutePlanning.png"; break; case "ECHO SOUNDER": s += "icon_Bottom_EchoSounder.png"; break; case "DOPPLER SONAR": case "DOPPLER LOG": s += "icon_Bottom_SpeedLog.png"; break; case "INMARSAT-C": s += "icon_Inmarsat_C.png"; break; case "INMARSAT-FB": s += "icon_Inmarsat_FBB.png"; break; case "SSAS": s += "icon_Inmarsat_SASS.png"; break; case "LRIT": s += "icon_Inmarsat_LRIT.png" }var r = $("<img>", { src: s, width: "50" }); i.append(r); var o = $("<div>", { class: "col pl-2 pr-2" }); i.append(o); var c = $("<div>", { class: "btn-group w-100" }); o.append(c); var d = $("<button>", { type: "button", class: "btn disabled w-100 minfo", "data-group": e, "data-productId": a, text: t, "data-check": 0 }); c.append(d) }), $.getJSON("/DrawingOrders/LoadConfigEquipments", { serviceIdx: e, act: t }).done(function (e) { $("#ServiceType").val(); $.each(e, function () { this.ServiceIdx; var e = this.ServiceType, t = this.Version, n = this.DiffVersion, i = this.OrderState, s = this.Equipments, r = this.MergeFile, o = "FD"; 90 === e ? o = "AD" : 95 === e && (o = "WD"), $.each(s, function () { var s = this.Id, r = this.ProductId, c = (this.Name, this.Group, this.Modifier), d = this.Link, p = (this.HaveChildren, this.ProductState), l = this.Quantity, u = this.Files, h = this.State, v = (this.ServiceItemIdx, $('#DivEquip button[data-productId="' + r + '"]')); return void 0 === v || 0 === v.length || (isEmpty(p) && 99 !== e ? (v.prop("title", "아직 지원되지 않는 모델입니다."), !0) : void $.each(v, function () { var r = $(this), p = $(this).siblings(".state"); if ("0" === r.attr("data-check")) { r.attr("data-check", 1), r.val(s); var v = $(r).parent(), g = $("<button>", { type: "button", class: "btn btn-light cursor-pointer" }); v.append(g), 99 !== e ? g.attr("onclick", 'location.href="' + d + '"') : g.on("click", function () { LoadFD($(this).siblings(".minfo").val()), $("#DivFDrawing").modal("show") }); var f = $("<i>", { class: "fas fa-info" }); g.append(f); var b = (isEmpty(c) ? "" : c + " ") + r.text(); r.text(b); var m = $("<span>", { text: "Q:" + l, class: "float-right badge" }); r.append(m); var k = $("<span>", { text: o + " " + t, class: "float-right badge" }); if (r.append(k), check = n ? "70" === i ? 20 : 0 === h ? 10 : h : 30, 0 !== check && (r.removeClass("disabled"), r.addClass("cursor-default"), r.addClass("bg-white"), p = $("<button>", { class: "state btn cursor-default", "data-state": check }), r.before(p), 10 === check || 20 === check ? (p.removeClass("cursor-default"), p.prop("title", "toggle state"), 10 === check ? (p.addClass("warning-color"), r.addClass("warning-color-font"), m.addClass("warning-color"), k.addClass("warning-color mr-1")) : 20 === check && (p.addClass("success-color"), r.addClass("success-color-font"), m.addClass("success-color"), k.addClass("success-color mr-1")), p.on("click", function () { loading.show(); var e = $(this).attr("data-state"), a = $(this).siblings(".minfo"); if ("10" === e) { $(this).removeClass("warning-color"), $(this).addClass("success-color"), a.removeClass("warning-color-font"), a.addClass("success-color-font"); var t = a.find(".badge"); $.each(t, function () { $(this).removeClass("warning-color"), $(this).addClass("success-color") }), $(this).attr("data-state", 20), e = 20 } else $(this).removeClass("success-color"), $(this).addClass("warning-color"), a.removeClass("success-color-font"), a.addClass("warning-color-font"), t = a.find(".badge"), $.each(t, function () { $(this).removeClass("success-color"), $(this).addClass("warning-color") }), $(this).attr("data-state", 10), e = 10; $.ajax({ url: "/DrawingOrders/ChangeState", type: "POST", data: { strState: e, dwgEquipId: a.val() }, success: function () { loading.hide() }, error: function (e, a, t) { toastr.error("code:" + e.status + "\nmessage:" + e.responseText + "\nerror:" + t) } }) })) : 30 === check && (p.addClass("info-color"), r.addClass("info-color-font"), m.addClass("info-color"), k.addClass("info-color mr-1"))), void 0 !== u && 0 !== u.length) { v.addClass("dropright"); var I = $("<button>", { type: "button", class: "btn btn-light cursor-pointer", "data-toggle": "dropdown" }); v.append(I); var D = $("<i>", { class: "far fa-file" }); I.append(D); var S = $("<div>", { class: "dropdown-menu" }); I.before(S), $.each(u, function () { this.Path; var e = this.FileName; if (a = $("<a>", { class: "dropdown-item", href: this.Path, target: "_blank" }), e.indexOf("docx") > 0) { var t = $("<i>", { class: "fas fa-file-word mr-2" }); a.append(t); var n = $("<span>", { text: e }); a.append(n) } else e.indexOf("pdf") > 0 && (t = $("<i>", { class: "fas fa-file-pdf mr-2" }), a.append(t), n = $("<span>", { text: e }), a.append(n)); S.append(a) }) } return !1 } })) }), $.each(r, function () { var e = this.Group, a = this.Id, t = this.Path, n = $("." + e), i = $("<button>", { type: "button", value: a, class: "btn btn-light cursor-pointer", onclick: 'window.open("' + t + '")' }); n.append(i); var s = $("<i>", { class: "far fa-file" }); i.append(s) }) }), loading.hide() }).fail(function (e) { console.log(e) }), loading.hide() }).fail(function (e) { console.log(e) }) : $.getJSON("/DrawingOrders/LoadEquipments", function (a) { $.each(a, function () { var e = this.Group, a = this.Products, t = $("#DivEquip div." + e.replace("/", "").replace(/ /g, "")), n = 1; "ECDIS" === e || "CONNING DISPLAY" === e ? n = 2 : "RADAR" === e && (n = 3); for (var i = 0; i < n; i++) { var s = $("<div>", { class: "row align-items-center pl-3 pr-3" }); s.on("click", function (e) { if ($(e.currentTarget).is("select") || $(e.currentTarget).is("input")) return !1; var a = $(this).find('input[type="checkbox"]'); a.prop("checked", !a.prop("checked")), a.trigger("change") }), t.append(s); var r = $("<input>", { type: "checkbox", class: "mr-1" }); r.on("change", function () { var e = $(this).parent(); $(this).prop("checked") ? e.addClass("light-blue lighten-4") : e.removeClass("light-blue lighten-4") }), s.append(r); var o = "/lib/image/icon (128x128)/"; switch (e) { case "MF/HF": o += "icon_Radio_MHF.png"; break; case "NAVTEX": o += "icon_Radio_Navtex.png"; break; case "SART": o += "icon_Radio_Sart.png"; break; case "EPIRB": o += "icon_Radio_EPIRB.png"; break; case "VHF": o += "icon_Radio_VHF.png"; break; case "TWO-WAY VHF": o += "icon_Radio_Two-way.png"; break; case "UHF": o += "icon_Radio_UHF.png"; break; case "WEATHER FAX": o += "icon_Radio_WeatherFax.png"; break; case "VDR": o += "icon_Voyage_VDR.png"; break; case "AIS": o += "icon_Voyage_AIS.png"; break; case "GPS": o += "icon_Voyage_DGPS.png"; break; case "BNWAS": o += "icon_Voyage_BNWAS.png"; break; case "SAT-LOG": o += "icon_Voyage_SatLog.png"; break; case "BRIDGE INTERFACE": o += "icon_MFD_BIF.png"; break; case "RADAR": o += "icon_MFD_Radar.png"; break; case "ECDIS": o += "icon_MFD_Ecdis.png"; break; case "CONNING DISPLAY": o += "icon_MFD_Conning.png"; break; case "RPS": o += "icon_MFD_RoutePlanning.png"; break; case "ECHO SOUNDER": o += "icon_Bottom_EchoSounder.png"; break; case "DOPPLER SONAR": case "DOPPLER LOG": o += "icon_Bottom_SpeedLog.png"; break; case "INMARSAT-C": o += "icon_Inmarsat_C.png"; break; case "INMARSAT-FB": o += "icon_Inmarsat_FBB.png"; break; case "SSAS": o += "icon_Inmarsat_SASS.png"; break; case "LRIT": o += "icon_Inmarsat_LRIT.png" }var c = $("<img>", { src: o, width: "50" }); s.append(c); var d = $("<div>", { class: "col pr-0" }); s.append(d); var p = $("<div>", { class: "input-group" }); d.append(p); var l = e.replace("/", "").replace(/ /g, ""); n > 1 && (l += i + 1); var u = $("<select>", { name: l }); p.append(u), $.each(a, function () { var e = this.Id, a = this.Model, t = $("<option>", { value: e, text: a }); u.append(t) }), SelectLJH(u); var h = $("<div>", { class: "input-group-append" }); p.append(h); var v = $("<input>", { type: "number", class: "form-control", name: "quantity", value: "TWO-WAY VHF" === e ? 3 : 1 }); h.append(v) } }), $.getJSON("/DrawingOrders/LoadConfigEquipments", { serviceIdx: e, action: null }).done(function (e) { $.each(e[0].Equipments, function () { var e = this.Id, a = this.ProductId, t = this.Name, n = this.Quantity, i = this.ServiceItemIdx, s = $('#DivEquip select[name="' + t.replace("/", "").replace(/ /g, "") + '"]'); s.val(a), SelectLJH(s, "prepend"); var r = s.parent().parent().parent(); r.addClass("light-blue lighten-4"); var o = r.find('input[type="checkbox"]'); o.prop("checked", !0), o.val(i); var c = $("<input>", { type: "hidden", value: e, name: "DrawingEquipId" }); o.after(c), r.find('input[name="quantity"]').val(n) }) }).fail(function (e) { console.log(e) }); var t = $("#BtnEditOrder"); t.val("Save"), t.text("Save"), t.removeClass("primary-color"), t.addClass("success-color"), $("#Loading").hide() }).fail(function (e) { console.log(e) }) } function EditOrderEnd(e) { for (var a = new FormData, t = $("#FindDwgInfo").get(0).files, n = $("#FindID").get(0).files, i = 0; i < t.length; i++)a.append("DwgInfoShtFile", t[i]); for (i = 0; i < n.length; i++)a.append("InspectionFile", n[i]); a.append("serviceIdx", e); var s = new Array, r = $('#DivEquip input[type="checkbox"]'); $.each(r, function () { var e = $(this).parent(), a = { EquipName: e.find("select").attr("name"), Check: $(this).prop("checked"), ProductId: e.find("select").val(), Quantity: e.find('input[name="quantity"]').val(), ServiceItemIdx: $(this).val(), DrawingEquipId: $(this).siblings('input[name="DrawingEquipId"]').val() }; s.push(a) }); var o = { ServiceIdx: e, Equipments: s }, c = JSON.stringify(o); a.append("json", c), $.ajax({ type: "POST", url: "/DrawingOrders/SaveEditOrder", contentType: !1, processData: !1, data: a, success: function (a) { if ("Success" === a) { LoadEquipments(e, "Load"); var t = $("#BtnEditOrder"); t.val("Edit"), t.text("Edit"), t.removeClass("btn-success"), t.addClass("btn-primary"), $("#FindDwgInfo").parent().css("display", "none"), $("#FindID").parent().css("display", "none"), toastr.success("Save equipments", "Success save", { positionClass: "toast-bottom-right" }) } else toastr.error(a) } }) } $(window).on("load", function () { Initialize(), LoadService(serviceIdx), $(".collapse").on("show.bs.collapse", function () { $(this).parent().find(".fa-caret-down").removeClass("fa-caret-down").addClass("fa-caret-up") }), $(".collapse").on("hide.bs.collapse", function () { $(this).parent().find(".fa-caret-up").removeClass("fa-caret-up").addClass("fa-caret-down") }), $("#ServiceType").on("change", function () { var e = $("#ServiceIdx").val(), a = $(this).val(); $.getJSON("/DrawingOrders/LoadVersion", { serviceIdx: e, serviceType: a }).done(function (e) { var a = $("#Version"); a.empty(), $.each(e, function () { var e = $("<option>", { value: this.ServiceIdx, text: this.Version + " (Request date: " + this.RequestDate + ")" }); a.append(e), a.val(this.ServiceIdx) }), $("#Version").trigger("change"), SelectLJH(a) }).fail(function (e) { console.log(e) }) }), $("#Version").on("change", function () { serviceIdx = $(this).val(), $("#ServiceIdx").val(serviceIdx), LoadService(serviceIdx) }), $("#BtnEditOrder").click(function () { var e = $("#ServiceIdx").val(); "Edit" === this.value ? LoadEquipments(e, null) : EditOrderEnd(e) }), $("#CheckAll").on("click", function () { var e = $(this).prop("checked"), a = $("#DownloadFileList tbody").find('input[type="checkbox"]'); $.each(a, function () { $(this).prop("checked", e) }) }), $("#DownloadFileModal").on("show.bs.modal", function () { $.getJSON("/DrawingOrders/LoadFileList", { serviceIdx: serviceIdx }).done(function (e) { var a = $("#DownloadFileList tbody"); a.empty(), $.each(e, function () { var e = this.Id, t = this.Name, n = this.Model, i = this.Files, s = $("<tr>", { class: "align-items-center" }); a.append(s); for (var r = 0; r < 3; r++) { var o = $("<td>"); if (s.append(o), 0 === r) { var c = $("<div>", { class: "form-group form-check pl-0 mb-0" }); o.append(c); var d = $("<input>", { type: "checkbox", value: e, id: "File" + e, class: "mr-2" }); c.append(d); var p = $("<label>", { class: "form-check-label", for: "File" + e, text: t }); c.append(p) } else 1 === r ? o.append(n) : 2 === r && $.each(i, function () { var e = $("<a>", { href: this.URL, text: this.FileName }); o.append(e) }) } }) }).fail(function (e) { console.log(e) }) }), $("#DownloadAction").on("click", function () { var e = $("#DownloadFileList tbody input:checked"); if (0 === e.length) toastr.warning("File을 선택해주세요.", "Download files", { positionClass: "toast-bottom-right" }); else { var a = new Array; $.each(e, function () { var e = $(this).val(); a.push(e) }); var t = { id: serviceIdx, arrEquip: a }; $.ajax({ url: "/DrawingOrders/DownloadFile", type: "POST", data: { obj: JSON.stringify(t) }, success: function (e) { location.href = e }, error: function (e) { toastr.error(e.statusText) } }) } }), $("#FindIns").on("change", function () { if (window.FileReader) $(this)[0].files[0].name; else $(this).val().split("/").pop().split("\\").pop(); if (void 0 !== window.FormData) { for (var e = new FormData, a = $("#FindIns").get(0).files, t = 0; t < a.length; t++)e.append(a[t].name, a[t]); var n = $("#DwgEquipId").val(); e.append("Id", n); var i = $(this); $.ajax({ url: "/DrawingOrders/UploadInspection", type: "POST", contentType: !1, processData: !1, data: e, success: function (e) { if ("[]" === e) toastr.error(e); else { i.val(""); var a = $("#DwgEquipId").val(); LoadInspection(a) } }, error: function (e) { toastr.error(e.statusText) } }) } else console.log("FormData 없음") }), $("#FindDwgInfo").on("change", function () { if (window.FileReader) var e = $(this)[0].files[0].name; else e = $(this).val().split("/").pop().split("\\").pop(); $(this).siblings(".upload-name").val(e) }), $("#FindID").on("change", function () { var e = ""; if (window.FileReader) for (var a = $(this)[0].files, t = 0; t < a.length; t++)t > 0 && (e += ", "), e += a[t].name; $(this).siblings(".upload-name").val(e) }), $("#BtnCreateFD").on("click", function () { var e = $("#DwgEquipId").val(), a = $("#DwgEquipFile").val(), t = new Array, n = $("#InsList input:checked"); $.each(n, function () { var e = $(this).parent().parent().parent().find('input[type="hidden"]'); t.push(e.val()) }), t = JSON.stringify(t); var i = new Array, s = $("#ManList input:checked"); if (0 === s.length) return toastr.warning("선택된 Manual이 없습니다."), !1; $.each(s, function () { var e = $(this).parent().parent().parent().find('input[type="hidden"]'); i.push(e.val()) }), i = JSON.stringify(i), $.ajax({ url: "/DrawingOrders/CreateFD", data: { dwgEquipId: e, fileName: a, arrInspection: t, arrManual: i }, success: function () { $("#DivFDrawing").modal("hide"), toastr.success("Create FD", "Success create", { positionClass: "toast-bottom-right" }) }, error: function (e, a, t) { console.log(e.responseText) } }) }), $("#DivFDrawing").on("hide.bs.modal", function () { LoadEquipments(serviceIdx, "Load") }), $(".underOverlay").on("click", function () { $(".under").removeClass("show"), $(this).removeClass("show") }), $(".under .form-check-input").on("change", function () { var e = $(this).siblings("label"), a = $(this).parent().parent().siblings().find("select, input"); $(this).prop("checked") ? (e.removeClass("disabled"), $.each(a, function () { $(this).prop("disabled", !1), $(this).is("select") && SelectLJH($(this)) })) : (e.addClass("disabled"), $.each(a, function () { $(this).prop("disabled", !0), $(this).is("select") && SelectLJH($(this)) })) }) });