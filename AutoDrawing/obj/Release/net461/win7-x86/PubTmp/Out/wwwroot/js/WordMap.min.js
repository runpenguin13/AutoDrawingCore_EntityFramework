function initialize() { var t = $("#MenuBar"), e = t.find("ol.breadcrumb"); li = $("<li>", { class: "breadcrumb-item active", text: "Wordmap" }), e.append(li); var a = t.find("div.btn-group"), n = $("<div>", { class: "btn-group mr-3" }); a.before(n); var r = $("<button>", { id: "BtnCreate", type: "button", "data-toggle": "modal", "data-target": "#DivCreate", text: "CREATE", class: "btn success-color text-white" }); n.append(r), r = $("<button>", { id: "BtnDelete", type: "button", "data-toggle": "modal", "data-target": "#DivDelete", text: "DELETE", class: "btn danger-color text-white" }), n.append(r) } function Search() { loading.show(); var t = $("#Category").val(), e = $("#SearchWord").val(); $.getJSON("/WordMaps/LoadWordMaps", { filter: e, category: t }).done(function (t) { var e = $("#List tbody"); e.empty(), $.each(t, function () { var t = $("<tr>"); e.prepend(t); for (var a = 0; a < 5; a++) { var n = $("<td>"); switch (t.append(n), a) { case 0: var r = $("<input>", { type: "hidden", id: "WordMapId", value: this.WordMapId, "data-product": this.ProductId, "data-variant": this.VariantId }); n.append(r); var i = $("<input>", { type: "checkbox" }); n.append(i); var o = $("<span>", { text: this.ProductNumber, class: "ml-3" }); n.append(o); break; case 1: var c = this.VariantName, d = $("<span>", { text: c }); n.append(d); break; case 2: var l = $("<span>", { text: this.ElementName }); n.append(l); break; case 3: var p = $("<span>", { text: this.ElementType }); n.append(p); break; case 4: n.css("text-align", "right"); var s = $("<button>", { type: "button", class: "btn btn-light", value: this.WordMapId, title: "Copy" }); n.append(s); var u = $("<i>", { class: "far fa-copy" }); s.prepend(u), s.on("click", function (t) { SubmitClone($(t.currentTarget).val()) }) } } }), loading.hide() }) } function ChangeProduct(t) { var e = $("#" + t + "ProductId option:selected"), a = e.val(), n = $(e).attr("equipmentname"); $("#" + t + "EquipmentGroup").val(n); $.getJSON("/WordMaps/LoadVariantList", { productId: a }).done(function (e) { var a = $("#" + t + "VariantId"); a.empty(), a.siblings().remove(); var n = $("<option>", { text: "-- Please select --", value: "" }); a.append(n), $.each(e, function () { var t = $("<optGroup>", { label: this.Group }); a.append(t); var e = this.Variants; $.each(e, function () { n = $("<option>", { value: this.VariantId, text: this.VariantModel + " [" + this.VariantName + "]", "data-name": this.VariantName, title: this.VariantRemark }), a.append(n) }) }), SelectLJH(a, "prepend") }) } function ChangeVariant(t) { var e = $("#" + t + "VariantId"), a = $("#" + t + "VariantId option:selected"); if (!isEmpty(e.val())) { var n = $("<button>", { type: "button", value: e.val(), text: a.text(), class: "btn btn-white", style: "width:100%", title: a.prop("title") }); e.after(n), n.on("click", function () { $(this).remove() }) } } function AddVariant(t) { var e = $("#EditVariantId option:selected"); if (null !== e.val()) { var a = $("#" + t + "Variants"), n = a.val(), r = new Array; n.length > 0 && (-1 === n.indexOf(",") ? r.push(n) : r.push(n.split(","))); var i = !1; if ($.each(r, function () { if (e.val() === r) return i = !0, !0 }), !1 === i) { r.push(e.val()), a.val(r.join(",")); var o = $("#EditSelect"), c = $("<dt>"); o.append(c); var d = $("<input>", { type: "text", value: e.text(), class: "form-control", readonly: !0, style: "width:13.5rem" }); c.append(d); var l = $("<button>", { class: "btn btn-default", type: "button", value: e.val() }); c.append(l); var p = $("<i>", { class: "fa fa-minus-circle" }); l.append(p) } $("#EditVariantId").val("") } } function RemoveItem(t, e) { $(e.currentTarget).parent().remove(); for (var a = $("#" + t + "Select"), n = $("#" + t + "Variants"), r = new Array, i = (r = n.val().split(",")).length; i >= 0; i--)r[i] === $(e.currentTarget).val() && r.splice(i, 1); n.val(r.join(",")), 0 === n.length && a.parent().parent().css("display", "none") } function RefControl(t, e) { $("#" + e + "ProductId"); var a = $("#" + e + "Mass"), n = $("#" + e + "Qty"), r = $("#" + e + "ComponentGroup"), i = $("#" + e + "ElementType"), o = $("#" + e + "Object"), c = $("#" + e + "Desc"); switch (t) { case "Product": $("#" + e + "EquipmentGroup").empty(); $("#EditVariantId").siblings().remove(); break; case "Variant": n.prop("readonly", !1); break; case "ComponentGroup": break; case "ElementType": "VISIO" === i.val() ? (a.prop("readonly", !1), o.prop("readonly", !1), c.prop("readonly", !1), r.val("SYSTEM")) : (a.prop("readonly", !0), o.prop("readonly", !0), c.prop("readonly", !0)) } } function SubmitClone(t) { $.ajax({ type: "POST", url: "/WordMaps/Clone/", data: { id: t }, success: function (t) { Search(), toastr.success("Success copy") }, failure: function (t) { toastr.fail(t) }, error: function (t) { toastr.error(t) } }) } $(window).on("load", function () { initialize(), Search(), $("#SearchWord").keydown(function (t) { 13 === t.keyCode && Search() }), $("#Search").on("click", function () { Search() }), $("#CategoryList button").click(function (t) { var e = $(t.currentTarget); $("#Category").val(e.val()), e.parent().siblings(".dropdown-toggle").find("span").text(e.val()), Search() }), $("#chkAll").click(function () { var t = $("#chkAll").prop("checked"), e = $('#List input[type="checkbox"]'); $(e).each(function () { $(this).prop("checked", t) }) }), $("#DivCreate").on("show.bs.modal", function (t) { var e = $("#CreateProductId"); 0 === e.children().length && $.getJSON("/WordMaps/LoadProductList", function (t) { e.empty(); var a = $("<option>", { text: "-- Please select --", value: "" }); e.append(a), $.each(t, function () { e.append($("<option>", { value: this.ProductId, text: this.ProductModel, EquipmentName: this.EquipmentName })) }), SelectLJH(e, "prepend") }) }), $("#CreateProductId").change(function () { RefControl("Product", "Create"), ChangeProduct("Create") }), $("#CreateVariantId").change(function () { RefControl("Variant", "Create"), ChangeVariant("Create") }), $("#BtnSubmitCreate").click(function () { var t = $("#FormCreate").serialize(); $.ajax({ type: "POST", url: "/WordMaps/Create/", data: t, success: function (t) { $("#DivCreate").modal("toggle"), Search() }, error: function (t) { console.log(t) } }) }), $("#CreateSelect").delegate("button", "click", function (t) { RemoveItem("Create", t) }), $("#CreateComponentGroup").change(function () { RefControl("ComponentGroup", "Create") }), $("#CreateElementType").change(function () { RefControl("ElementType", "Create") }), $("#EditProductId").change(function () { RefControl("Product", "Edit"), ChangeProduct("Edit") }), $("#EditVariantId").change(function () { RefControl("Variant", "Edit"), ChangeVariant("Edit") }), $("#FormEdit input").keydown(function (t) { 13 === t.keyCode && $("#BtnSubmitEdit").trigger("click") }), $("#BtnSubmitEdit").click(function () { var t = $("#FormEdit").serialize(), e = "", a = $("#EditVariantId").siblings("button"); $.each(a.get().reverse(), function () { isEmpty(e) || (e += ","), e += $(this).val() }), t += "&Variants=" + e, $.ajax({ type: "POST", url: "/WordMaps/Edit/", data: t, success: function (t) { $("#DivEdit").modal("toggle"), Search() }, error: function (t) { console.log(t) } }) }), $("#EditComponentGroup").change(function () { RefControl("ComponentGroup", "Edit") }), $("#EditElementType").change(function () { RefControl("ElementType", "Edit") }), $("#BtnDelete").click(function () { $("#DivDelete").modal() }), $("#BtnSubmitDelete").click(function () { var t = $("#List input:checked"); if (0 === t.length) toastr.error("Please select item", null, { positionClass: "toast-bottom-right" }); else { var e = new Array; $.each(t, function () { var t = $(this).siblings('input[type="hidden"]'); e.push(t.val()) }); var a = JSON.stringify(e); $.ajax({ type: "POST", url: "/WordMaps/SubmitDelete/", data: { json: a }, success: function () { $("#DivDelete").modal("toggle"), Search() }, error: function (t) { console.log(t) } }) } }), $("#List").delegate("tr", "dblclick", function (t) { if ("checkbox" === t.target.type) return !0; loading.show(); var e = $("#FormEdit"), a = $(this).find("#WordMapId").val(); $("#EditWordMapId").val(a); var n = e.find('input[type="text"], select'); $.each(n, function () { this.value = "" }), $.getJSON("/WordMaps/LoadWordMapItem", { id: a }).done(function (t) { var e = t.EquipmentName, a = t.ProductId, n = t.VariantIds; $("#EditEquipmentGroup").val(e), $.getJSON("/WordMaps/LoadProductList", function (t) { var e = $("#EditProductId"); e.empty(), $.each(t, function () { var t = $("<option>", { value: this.ProductId, text: this.ProductModel, EquipmentName: this.EquipmentName }); e.append(t) }), e.val(a), SelectLJH(e) }), $.getJSON("/WordMaps/LoadVariantList", { productId: a }).done(function (t) { var e = $("#EditVariantId"); e.empty(), e.siblings().remove(); var a = $("<option>", { text: "-- Please select --", value: "" }); if (e.append(a), $.each(t, function () { var t = $("<optGroup>", { label: this.Group }); e.append(t); var n = this.Variants; $.each(n, function () { a = $("<option>", { value: this.VariantId, text: this.VariantModel + " [" + this.VariantName + "]", "data-name": this.VariantName, title: "Group: " + this.VariantGroup + (isEmpty(this.VariantRemark) ? "" : "\nRemark: " + this.VariantRemark) }), e.append(a) }), SelectLJH(e, "prepend") }), !isEmpty(n)) for (var r = n.split(","), i = 0; i < r.length; i++)e.val(r[i]).trigger("change") }).fail(function (t) { console.log(t) }); var r = $("#EditWordMapInfo").find("input, select"); $.each(r, function () { var e = $(this).attr("name"), a = t[e]; isEmpty(a) || $(this).val(a) }), $("#DivEdit").modal("show"), loading.hide() }).fail(function (t) { console.log(t) }) }), $("#List").delegate("tr", "click", function (t) { if ("checkbox" !== $(t.target).prop("type")) { var e = $(t.currentTarget).find('input[type="checkbox"]'); e.prop("checked", !e.prop("checked")) } $(t.currentTarget).toggleClass("table-active") }) });