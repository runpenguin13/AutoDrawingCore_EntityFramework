function initialize() { var t = $("#MenuBar"), e = t.find("ol.breadcrumb"); li = $("<li>", { class: "breadcrumb-item active", text: "Entity" }), e.append(li); var i = t.find("div.btn-group"), o = $("<div>", { class: "btn-group mr-3" }); i.before(o); var a = $("<button>", { id: "BtnCreate", type: "button", "data-toggle": "modal", "data-target": "#DivCreate", text: "CREATE", class: "btn success-color text-white" }); o.append(a), a = $("<button>", { id: "BtnDelete", type: "button", "data-toggle": "modal", "data-target": "#DivDelete", text: "DELETE", class: "btn danger-color text-white" }), o.append(a) } function EntityList() { loading.show(), $.getJSON("/Entities/EntityList", function (t) { var e = $("#EntityTable > tbody"); e.empty(), $.each(t, function () { var t = $("<tr>"); e.prepend(t); for (var i = 0; i < 3; i++) { var o = $("<td>"); switch (t.append(o), i) { case 0: var a = $("<input>", { type: "hidden", value: this.Id }); o.append(a); var n = $("<input>", { type: "checkbox" }); o.append(n); var s = $("<span>", { text: this.Name, class: "ml-3" }); o.append(s); break; case 1: s = $("<span>", { text: this.Code }), o.append(s); break; case 2: s = $("<span>", { text: this.CompanyIdx || " " }), o.append(s) } } }), loading.hide() }).done(function () { }).fail(function (t, e, i) { toastr.error("Load component", "Error", { positionClass: "toast-bottom-right" }) }) } $(window).on("load", function () { initialize(), EntityList(), SelectLJH($("select")), $("#FormCreate input").keydown(function (t) { 13 === t.keyCode && $("#BtnSubmitCreate").trigger("click") }), $("#BtnSubmitCreate").on("click", function () { $.ajax({ type: "POST", url: "/Entities/CreateEntity/", data: $("#FormCreate").serialize(), success: function (t) { "Success" === t ? ($("#DivCreate").modal("hide"), toastr.success("Success Create", "", { positionClass: "toast-bottom-right" }), EntityList()) : toastr.error(t, "", { positionClass: "toast-bottom-right" }) } }) }), $("#EntityTable").delegate("tr", "dblclick", function (t) { var e = $(t.currentTarget).find('input[type="hidden"]').val(); $.getJSON("/Entities/LoadItem", { id: e }).done(function (t) { $("#DivEdit").modal("show"); var e = $("#FormEdit input, #FormEdit select"); $.each(e, function () { var e = $(this).prop("name"); isEmpty(t[e]) || ($(this).val(t[e]), $(this).is("select") && SelectLJH($(this))) }) }).fail(function (t, e, i) { toastr.error("Load component", "Error", { positionClass: "toast-bottom-right" }) }) }), $("#FormEdit input").keydown(function (t) { 13 === t.keyCode && $("#BtnSubmitEdit").trigger("click") }), $("#BtnSubmitEdit").on("click", function () { var t = $("#FormEdit").serialize(); $.ajax({ type: "POST", url: "/Entities/EditEntity/", data: t, success: function (t) { "Success" === t ? ($("#DivEdit").modal("hide"), EntityList(), toastr.success("Success Edit", "", { positionClass: "toast-bottom-right" })) : toastr.error(t, "", { positionClass: "toast-bottom-right" }) } }) }), $("#BtnSubmitDelete").on("click", function () { var t = $("#EntityTable input:checked").siblings('input[type="hidden"]'); if (0 === t.length) toastr.error("삭제할 Item을 선택하세요.", "", { positionClass: "toast-bottom-right" }); else { var e = new Array; $.each(t, function () { e.push(this.value) }), $.ajax({ type: "POST", url: "/Entities/DeleteEntity/", data: { arrId: e }, success: function (t) { "Success" === t ? ($("#DivDelete").modal("hide"), EntityList(), toastr.success("Success Delete", "", { positionClass: "toast-bottom-right" })) : toastr.error(t, "", { positionClass: "toast-bottom-right" }) } }) } }), $("#EntityTable").delegate("tr", "click", function (t) { var e = $(this), i = $(this).find('input[type="checkbox"]'); $(t.target).is('input[type="checkbox"]') || i.prop("checked", !i.prop("checked")), i.prop("checked") ? e.addClass("table-info") : e.removeClass("table-info") }) });