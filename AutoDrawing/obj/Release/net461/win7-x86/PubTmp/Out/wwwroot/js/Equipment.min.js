function initialize() { var t = $("#MenuBar"), e = t.find("ol.breadcrumb"); li = $("<li>", { class: "breadcrumb-item active", text: "Equipment" }), e.append(li); var a = t.find("div.btn-group"), i = $("<div>", { class: "btn-group mr-3" }); a.before(i); var n = $("<button>", { id: "BtnCreate", type: "button", "data-toggle": "modal", "data-target": "#DivCreate", text: "CREATE", class: "btn success-color text-white" }); i.append(n), n = $("<button>", { id: "BtnDelete", type: "button", "data-toggle": "modal", "data-target": "#DivDelete", text: "DELETE", class: "btn danger-color text-white" }), i.append(n) } function Search() { var t = $("#SearchWord").val(); loading.show(), $.getJSON("/Equipments/List/", { filter: t }).done(function (t) { var e = $("#EquipmentTable > tbody"); e.empty(), $(t).each(function () { var t = $("<tr>"); e.prepend(t); for (var a = 0; a < 4; a++) { var i = $("<td>"); switch (t.append(i), a) { case 0: var n = $("<input>", { type: "hidden", value: this.Id }); i.append(n); var r = $("<input>", { type: "checkbox" }); i.append(r); var o = $("<span>", { text: this.Group, class: "ml-3" }); i.append(o); break; case 1: o = $("<span>", { text: this.Name }), i.append(o); break; case 2: isEmpty(this.FormalName) || (o = $("<span>", { text: this.FormalName }), i.append(o)); break; case 3: isEmpty(this.Desc) || (o = $("<span>", { text: this.Desc }), i.append(o)) } } }), loading.hide() }).fail(function (t, e, a) { var i = e + ", " + a; console.log("Request Failed: " + i) }) } $(window).on("load", function () { initialize(), Search(), $("#SearchWord").keydown(function (t) { 13 === t.keyCode && Search() }), $("#Search").on("click", function () { Search() }), $("#FormCreate input").keydown(function (t) { 13 === t.keyCode && $("#BtnSubmitCreate").trigger("click") }), $("#BtnSubmitCreate").click(function () { var t = $("#FormCreate").serialize(); $.ajax({ type: "POST", url: "/Equipments/Create/", data: t, success: function (t) { "Success" === t ? ($("#DivCreate").modal(), toastr.success("Success Create", "", { positionClass: "toast-bottom-right" }), Search()) : toastr.error(t, "", { positionClass: "toast-bottom-right" }) }, error: function (t) { alert("error") } }) }), $("#EquipmentTable").delegate("tr", "dblclick", function (t) { var e = $(t.currentTarget).find('input[type="hidden"]').val(); $.getJSON("/Equipments/LoadItem", { id: e }).done(function (t) { $("#DivEdit").modal("toggle"); var e = $("#FormEdit input"); $.each(e, function () { var e = $(this).prop("name"); isEmpty(t[e]) || $(this).val(t[e]) }) }).fail(function (t, e, a) { var i = e + ", " + a; console.log("Request Failed: " + i) }) }), $("#FormEdit input").keydown(function (t) { 13 === t.keyCode && $("#BtnSubmitEdit").trigger("click") }), $("#BtnSubmitEdit").click(function () { var t = $("#FormEdit").serialize(); $.ajax({ type: "POST", url: "/Equipments/Edit/", data: t, success: function () { $("#DivEdit").modal("toggle"), Search() }, error: function (t) { alert("error") } }) }), $("#BtnSubmitDelete").click(function () { var t = $("#EquipmentTable input:checked").siblings('input[type="hidden"]'); if (0 === t.length) toastr.error("삭제할 Item을 선택하세요.", "", { positionClass: "toast-bottom-right" }); else { var e = new Array; $.each(t, function () { e.push(this.value) }) } $.ajax({ type: "POST", url: "/Equipments/Delete/", data: { arrId: e }, success: function () { $("#DivDelete").modal("hide"), toastr.success("Success Delete", "", { positionClass: "toast-bottom-right" }), Search() }, failure: function (t) { alert("fail") }, error: function (t) { alert("error") } }) }) });